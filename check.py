#!/usr/bin/python
# -*- coding: utf-8 -*-

import smtplib
import ConfigParser
import time
import hashlib
import socket
import imaplib
import argparse

from email.mime.text import MIMEText
from email.parser import Parser


class Account(object): # {{{
    """docstring for Account"""
    def __init__(self, name, login=False, password=False, smtp_server="localhost", imap_server="localhost"): # {{{
        super(Account, self).__init__()
        self.name           =   name
        self.login          =   login
        self.password       =   password
        self.smtp_server    =   smtp_server
        self.imap_server    =   imap_server
        self.email          =   login

    # }}}

    def send(self, recipient): # {{{
        """docstring for send"""

        timestamp = time.time()

        payload = """Hi,
this is a testmail, generated by SMTP-GEE.

sent on:   %s
sent at:   %s
sent from: %s
sent to:   %s

Cheers.
    SMTP-GEE

""" % (socket.getfqdn(), timestamp, self.email, recipient.email, )


        test_id = hashlib.sha1(payload).hexdigest()


        msg = MIMEText(payload)

        msg['From']     =   self.email
        msg['To']       =   recipient.email
        msg['Subject']  =   "[SMTP-GEE] |%s" % (test_id, )

        s = smtplib.SMTP( self.smtp_server )
        #s.set_debuglevel(2)
        s.starttls()
        s.login(self.login, self.password )

        s.sendmail( self.email, recipient.email, msg.as_string() )
        s.quit()

        return test_id

    # }}}

    def check(self, check_id): # {{{
        """docstring for check"""

        m = imaplib.IMAP4_SSL(self.imap_server)

        m.login(self.login, self.password)
        m.select()

        data=['']

        count = 0
        # Wait until the message is there.
        while data == ['']:
            typ, data = m.search(None, 'SUBJECT', '"%s"' % check_id)
            time.sleep(1)
            count += 1

        print count

        for num in data[0].split():
            typ, data = m.fetch(num, '(RFC822)')
            # print typ
            msg = data[0][1]

        headers = Parser().parsestr(msg)

        for h in headers.get_all('received'):
            print "---"
            print h.strip('\n')

        # deleting should be more sophisticated, for debugging...
        #m.store(num, '+FLAGS', '\\Deleted')
        m.close()
        m.logout()
    # }}}


# }}}


if __name__ == "__main__":

    # Parse Options
    parser = argparse.ArgumentParser(description='Check how long it takes to send a mail (by SMTP) and how long it takes to find it in the IMAP-inbox')

#    parser.add_argument('integers', metavar='N', type=int, nargs='+',
#                   help='an integer for the accumulator')

    parser.add_argument('--from', dest='sender', action='store', required=True,
                   help='The account to send the message')
    parser.add_argument('--rcpt', dest='rcpt', action='store', required=True,
                   help='The account to receive the message')

    parser.add_argument('--config', default='config.ini', dest='config_file', action='store', required=False,
                   help='alternate config-file')



    args = parser.parse_args()

    # Read Config

    c = ConfigParser.ConfigParser()
    c.read(args.config_file)

    a={}

    for s in c.sections():
        a[s] = Account(s)

        # This has to be more easy...
        a[s].smtp_server = c.get(s, 'smtp_server')
        a[s].imap_server = c.get(s, 'imap_server')
        a[s].password    = c.get(s, 'password')
        a[s].login       = c.get(s, 'login')
        a[s].email       = c.get(s, 'email')


    r = a[args.sender].send(a[args.rcpt])
    print r
    a[args.rcpt].check(r)



## vim:fdm=marker:ts=4:sw=4:sts=4:ai:sta:et
